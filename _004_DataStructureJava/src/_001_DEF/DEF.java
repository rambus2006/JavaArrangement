package _001_DEF;

public class DEF {
    public static void main(String[] args) {
        /* 깊이 우선 탐색은 그래프 완전 탐색 기법 중 하나입니다. 깊이 우선 탐색은 그래프의 시작 노드에서 출발하여 탐색할 한 쪽 분기를 정하여 최대 깊이까지 탐색을 마친 후 다른 쪽 분기로
            이동하여 다시 탐색을 수행하는 알고리즘 입니다.
            다음은 깊이 우선 탐색의 기능, 특징, 시간 복잡도를 표로 정리한 것이다. 표의 시간 복잡도는 노드 개수를 V, 에지 개수를 E 로 표시했습니다.
            <깊이 우선 탐색 (DFS)>
            기능              |       특징          |  시간 복잡도(노드 수: V, 에지 수: E)
            --------------------------------------------------------------
            그리프 완전 탐색    | - 재귀함수로 구현    | O(V+E)
                             | - 스택 자료구조 이용  |
            깊이 우선 탐색은 실제 구현 시 재귀함수를 이용하므로 스택 오버플로우(stack overflow) 에 유의해야 한다.
            깊이 우선 탐색을 응용하여 풀 수 있는 문제는 단절점 찾기 , 단절선 찾기 , 사이클 찾기 , 위상정렬등이 있습니다.
        * <깊이 우선 탐의 핵심 이론 >
            - DFS 는 한 번 방문한 노드를 다시 방문하면 안되므로 노드 방문 여부를 체크할 배열이 필요하며, 그래프는 인접 리스트로 표현하겠습니다. 그리고 DFS의 탐색 방식은 후입선출 특성을 가지므로
            스택을 사용하여 설명하겠습니다.
        * <깊이 우선 탐색 과정>
          1. DFS를 위해 필요한 초기 작업은 인접리스트로 그래프 표현하기, 방문 배열 초기화하기, 시작 노드 스택에 삽입하기이다.
            1-1 스택에서
        */

    }
}